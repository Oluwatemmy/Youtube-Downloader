name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allows manual triggering from GitHub Actions tab

permissions:
  contents: write  # Required for creating releases

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Create installer package
      run: |
        python create_installer.py
    
    - name: Build Windows executable
      run: |
        .\build_windows.bat
      shell: cmd
    
    - name: Create portable package
      run: |
        mkdir portable
        copy dist\YouTubeDownloader.exe portable\
        copy README_GUI.md portable\
        copy TROUBLESHOOTING.md portable\
        copy LICENSE portable\
        echo @echo off > portable\run.bat
        echo cd /d "%%~dp0" >> portable\run.bat
        echo YouTubeDownloader.exe >> portable\run.bat
        echo pause >> portable\run.bat
        
        # Create ZIP
        Compress-Archive -Path portable\* -DestinationPath YouTubeDownloader-Portable.zip
      shell: powershell
    
    - name: Get version from tag
      id: version
      run: |
        if ("${{ github.ref }}" -like "refs/tags/*") {
          $version = "${{ github.ref }}".Replace("refs/tags/", "")
        } else {
          $version = "dev-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        }
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "Version: $version"
      shell: powershell
    
    - name: Create release notes
      run: |
        @"
        # YouTube Downloader Pro ${{ steps.version.outputs.VERSION }}
        
        ## 🚀 Download Options
        
        ### 🏆 Recommended: Source Installer
        **Best compatibility - works on any Windows system with Python**
        - Download: `YouTubeDownloader-Installer.zip` (25 KB)
        - Extract and run `YouTube Downloader.bat`
        - Dependencies install automatically on first run
        - Auto-detects best available interface (GUI/Web/CLI)
        
        ### 🔧 Alternative: Portable Executable  
        **No Python required - single executable**
        - Download: `YouTubeDownloader-Portable.zip` (~20 MB)
        - Extract and run `YouTubeDownloader.exe`
        - May fall back to web interface if GUI unavailable
        - Self-contained with all dependencies
        
        ## ✨ Features
        - **5-10x faster downloads** via async architecture
        - **50+ concurrent downloads** supported
        - **Multiple interfaces**: Desktop GUI, Web Browser, Enhanced CLI
        - **Smart fallback**: Always provides working interface
        - **Resume capability** for interrupted downloads
        - **Batch downloads** and playlist support
        - **Real-time progress** tracking with speed/ETA
        
        ## 📋 Requirements
        - **Source Installer**: Windows 10+ with Python 3.8+
        - **Portable**: Windows 10+ (no additional requirements)
        
        ## 🛠️ Installation
        
        ### Source Installer (Recommended):
        1. Download `YouTubeDownloader-Installer.zip`
        2. Extract to folder
        3. Run `YouTube Downloader.bat`
        4. First run installs dependencies automatically
        
        ### Portable Executable:
        1. Download `YouTubeDownloader-Portable.zip`
        2. Extract to folder  
        3. Run `YouTubeDownloader.exe`
        
        ## 🆘 Support
        - **GUI not working?** - Web interface launches automatically
        - **Need help?** - Check included TROUBLESHOOTING.md
        - **Issues?** - Report on GitHub Issues page
        
        ---
        **⚠️ Educational Use Only**: Always comply with YouTube's Terms of Service
        "@  | Out-File -FilePath release_notes.md -Encoding utf8
      shell: powershell
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-files
        path: |
          YouTubeDownloader-Installer.zip
          YouTubeDownloader-Portable.zip
          dist/YouTubeDownloader.exe
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        name: YouTube Downloader Pro ${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        files: |
          YouTubeDownloader-Installer.zip
          YouTubeDownloader-Portable.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-cross-platform:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create cross-platform package
      run: |
        mkdir -p cross-platform
        cp youtube_downloader_safe.py cross-platform/
        cp youtube_downloader_gui.py cross-platform/
        cp youtube_downloader_web.py cross-platform/
        cp yt_dlp_enhanced.py cross-platform/
        cp requirements.txt cross-platform/
        cp README_GUI.md cross-platform/
        cp TROUBLESHOOTING.md cross-platform/
        cp LICENSE cross-platform/
        
        # Create launch scripts for different platforms
        cat > cross-platform/run_linux.sh << 'EOF'
        #!/bin/bash
        echo "YouTube Downloader Pro - Linux/macOS"
        echo "===================================="
        
        # Check Python
        if ! command -v python3 &> /dev/null; then
            echo "ERROR: Python 3 not found!"
            echo "Please install Python 3: https://python.org"
            exit 1
        fi
        
        # Install requirements
        if [ ! -f .installed ]; then
            echo "Installing requirements..."
            python3 -m pip install -r requirements.txt --user
            touch .installed
        fi
        
        # Launch
        echo "Starting YouTube Downloader..."
        python3 youtube_downloader_safe.py
        EOF
        
        chmod +x cross-platform/run_linux.sh
        
        # Create Windows batch file
        cat > cross-platform/run_windows.bat << 'EOF'
        @echo off
        title YouTube Downloader Pro
        
        echo YouTube Downloader Pro - Windows
        echo ===================================
        
        python --version >nul 2>&1
        if %ERRORLEVEL% NEQ 0 (
            echo ERROR: Python not found!
            echo Please install Python: https://python.org
            pause
            exit /b 1
        )
        
        if not exist .installed (
            echo Installing requirements...
            python -m pip install -r requirements.txt --user
            echo. > .installed
        )
        
        echo Starting YouTube Downloader...
        python youtube_downloader_safe.py
        pause
        EOF
        
        # Create README
        cat > cross-platform/README.txt << 'EOF'
        YouTube Downloader Pro - Cross-Platform
        =======================================
        
        REQUIREMENTS:
        - Python 3.8 or later
        - Internet connection
        
        INSTALLATION:
        Windows: Run run_windows.bat
        Linux/macOS: Run ./run_linux.sh
        
        Or manually: python3 youtube_downloader_safe.py
        
        FEATURES:
        - Multiple interfaces (GUI/Web/CLI)
        - High-performance async downloads
        - Batch download support
        - Resume capability
        - Real-time progress tracking
        
        The application automatically detects the best available interface.
        EOF
        
        # Create ZIP
        zip -r YouTubeDownloader-CrossPlatform.zip cross-platform/
    
    - name: Upload cross-platform artifact
      uses: actions/upload-artifact@v4
      with:
        name: cross-platform
        path: YouTubeDownloader-CrossPlatform.zip